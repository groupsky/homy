- platform: mqtt
  name: Martin
  modes:
    - "off"
    - "heat"
    - "cool"
    - "fan_only"
  fan_modes:
    - "auto"
    - "low"
    - "medium"
    - "high"
  precision: 0.5
  temperature_unit: "C"
  temp_step: 0.5
  current_temperature_template: "{{ value_json.currentTemp|float }}"
  fan_mode_command_template: >-
    { "fanSetting": "{% if value == 'medium' %}med{% else %}{{ value }}{% endif %}" }
  fan_mode_state_template: "{{ 'medium' if value_json.fanSetting == 'mid' else value_json.fanSetting }}"
  json_attributes_template: "{{ value_json | tojson }}"
  mode_command_template: >-
    {% if value == 'off' %}
      { "power": "off" }
    {% else %}
      { "power": "on", "mode": "{{ 'cooling' if value == 'cool' }}{{ 'heating' if value == 'heat' }}{{ 'ventilation' if value == 'fan_only' }}" }
    {% endif %}
  mode_state_template: >-
    {% if value_json.power == 'on' %}
      {{ 'off' if value_json.power == 'off' }}
      {{ 'cool' if value_json.mode == 'cooling' }}
      {{ 'heat' if value_json.mode == 'heating' }}
      {{ 'fan_only' if value_json.mode == 'ventilation' }}
    {% elif value_json.power == 'off' %}
      off
    {% endif %}
#  power_command_template: >-
#    { "power": "{{ 'off' if value == 'OFF' else 'on' }}" }
  power_state_template: "{{ value_json.power }}"
  temperature_command_template: >-
    { "targetTemp": {{ value }} }
  temperature_state_template: "{{ value_json.targetTemp }}"
  current_temperature_topic: /modbus/monitoring/thermostat-martin/reading
  fan_mode_state_topic: /modbus/monitoring/thermostat-martin/reading
  json_attributes_topic: /modbus/monitoring/thermostat-martin/reading
  mode_state_topic: /modbus/monitoring/thermostat-martin/reading
  power_state_topic: /modbus/monitoring/thermostat-martin/reading
  temperature_state_topic: /modbus/monitoring/thermostat-martin/reading
  fan_mode_command_topic: /modbus/monitoring/thermostat-martin/write
  mode_command_topic: /modbus/monitoring/thermostat-martin/write
  power_command_topic: /modbus/monitoring/thermostat-martin/power/write
  temperature_command_topic: /modbus/monitoring/thermostat-martin/write

- platform: mqtt
  name: Gergana
  modes:
    - "off"
    - "heat"
    - "cool"
    - "fan_only"
  fan_modes:
    - "auto"
    - "low"
    - "medium"
    - "high"
  precision: 0.5
  temperature_unit: "C"
  temp_step: 0.5
  current_temperature_template: "{{ value_json.currentTemp|float }}"
  fan_mode_command_template: >-
    { "fanSetting": "{% if value == 'medium' %}med{% else %}{{ value }}{% endif %}" }
  fan_mode_state_template: "{{ 'medium' if value_json.fanSetting == 'mid' else value_json.fanSetting }}"
  json_attributes_template: "{{ value_json | tojson }}"
  mode_command_template: >-
    {% if value == 'off' %}
      { "power": "off" }
    {% else %}
      { "power": "on", "mode": "{{ 'cooling' if value == 'cool' }}{{ 'heating' if value == 'heat' }}{{ 'ventilation' if value == 'fan_only' }}" }
    {% endif %}
  mode_state_template: >-
    {% if value_json.power == 'on' %}
      {{ 'off' if value_json.power == 'off' }}
      {{ 'cool' if value_json.mode == 'cooling' }}
      {{ 'heat' if value_json.mode == 'heating' }}
      {{ 'fan_only' if value_json.mode == 'ventilation' }}
    {% elif value_json.power == 'off' %}
      off
    {% endif %}
  #  power_command_template: >-
  #    { "power": "{{ 'off' if value == 'OFF' else 'on' }}" }
  power_state_template: "{{ value_json.power }}"
  temperature_command_template: >-
    { "targetTemp": {{ value }} }
  temperature_state_template: "{{ value_json.targetTemp }}"
  current_temperature_topic: /modbus/monitoring/thermostat-gergana/reading
  fan_mode_state_topic: /modbus/monitoring/thermostat-gergana/reading
  json_attributes_topic: /modbus/monitoring/thermostat-gergana/reading
  mode_state_topic: /modbus/monitoring/thermostat-gergana/reading
  temperature_state_topic: /modbus/monitoring/thermostat-gergana/reading
  fan_mode_command_topic: /modbus/monitoring/thermostat-gergana/write
  mode_command_topic: /modbus/monitoring/thermostat-gergana/write
  power_command_topic: /modbus/monitoring/thermostat-gergana/power/write
  temperature_command_topic: /modbus/monitoring/thermostat-gergana/write

- platform: mqtt
  name: Boris
  modes:
    - "off"
    - "heat"
    - "cool"
    - "fan_only"
  fan_modes:
    - "auto"
    - "low"
    - "medium"
    - "high"
  precision: 0.5
  temperature_unit: "C"
  temp_step: 0.5
  current_temperature_template: "{{ value_json.currentTemp|float }}"
  fan_mode_command_template: >-
    { "fanSetting": "{% if value == 'medium' %}med{% else %}{{ value }}{% endif %}" }
  fan_mode_state_template: "{{ 'medium' if value_json.fanSetting == 'mid' else value_json.fanSetting }}"
  json_attributes_template: "{{ value_json | tojson }}"
  mode_command_template: >-
    {% if value == 'off' %}
      { "power": "off" }
    {% else %}
      { "power": "on", "mode": "{{ 'cooling' if value == 'cool' }}{{ 'heating' if value == 'heat' }}{{ 'ventilation' if value == 'fan_only' }}" }
    {% endif %}
  mode_state_template: >-
    {% if value_json.power == 'on' %}
      {{ 'off' if value_json.power == 'off' }}
      {{ 'cool' if value_json.mode == 'cooling' }}
      {{ 'heat' if value_json.mode == 'heating' }}
      {{ 'fan_only' if value_json.mode == 'ventilation' }}
    {% elif value_json.power == 'off' %}
      off
    {% endif %}
  #  power_command_template: >-
  #    { "power": "{{ 'off' if value == 'OFF' else 'on' }}" }
  power_state_template: "{{ value_json.power }}"
  temperature_command_template: >-
    { "targetTemp": {{ value }} }
  temperature_state_template: "{{ value_json.targetTemp }}"
  current_temperature_topic: /modbus/monitoring/thermostat-boris/reading
  fan_mode_state_topic: /modbus/monitoring/thermostat-boris/reading
  json_attributes_topic: /modbus/monitoring/thermostat-boris/reading
  mode_state_topic: /modbus/monitoring/thermostat-boris/reading
  temperature_state_topic: /modbus/monitoring/thermostat-boris/reading
  fan_mode_command_topic: /modbus/monitoring/thermostat-boris/write
  mode_command_topic: /modbus/monitoring/thermostat-boris/write
  power_command_topic: /modbus/monitoring/thermostat-boris/power/write
  temperature_command_topic: /modbus/monitoring/thermostat-boris/write

- platform: mqtt
  name: Bedroom
  modes:
    - "off"
    - "heat"
    - "cool"
    - "fan_only"
  fan_modes:
    - "auto"
    - "low"
    - "medium"
    - "high"
  precision: 0.5
  temperature_unit: "C"
  temp_step: 0.5
  current_temperature_template: "{{ value_json.currentTemp|float }}"
  fan_mode_command_template: >-
    { "fanSetting": "{% if value == 'medium' %}med{% else %}{{ value }}{% endif %}" }
  fan_mode_state_template: "{{ 'medium' if value_json.fanSetting == 'mid' else value_json.fanSetting }}"
  json_attributes_template: "{{ value_json | tojson }}"
  mode_command_template: >-
    {% if value == 'off' %}
      { "power": "off" }
    {% else %}
      { "power": "on", "mode": "{{ 'cooling' if value == 'cool' }}{{ 'heating' if value == 'heat' }}{{ 'ventilation' if value == 'fan_only' }}" }
    {% endif %}
  mode_state_template: >-
    {% if value_json.power == 'on' %}
      {{ 'off' if value_json.power == 'off' }}
      {{ 'cool' if value_json.mode == 'cooling' }}
      {{ 'heat' if value_json.mode == 'heating' }}
      {{ 'fan_only' if value_json.mode == 'ventilation' }}
    {% elif value_json.power == 'off' %}
      off
    {% endif %}
  #  power_command_template: >-
  #    { "power": "{{ 'off' if value == 'OFF' else 'on' }}" }
  power_state_template: "{{ value_json.power }}"
  temperature_command_template: >-
    { "targetTemp": {{ value }} }
  temperature_state_template: "{{ value_json.targetTemp }}"
  current_temperature_topic: /modbus/monitoring/thermostat-bedroom/reading
  fan_mode_state_topic: /modbus/monitoring/thermostat-bedroom/reading
  json_attributes_topic: /modbus/monitoring/thermostat-bedroom/reading
  mode_state_topic: /modbus/monitoring/thermostat-bedroom/reading
  temperature_state_topic: /modbus/monitoring/thermostat-bedroom/reading
  fan_mode_command_topic: /modbus/monitoring/thermostat-bedroom/write
  mode_command_topic: /modbus/monitoring/thermostat-bedroom/write
  power_command_topic: /modbus/monitoring/thermostat-bedroom/power/write
  temperature_command_topic: /modbus/monitoring/thermostat-bedroom/write
