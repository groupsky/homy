[[outputs.influxdb]]
  urls = ["http://influxdb:8086"]
  database = "${INFLUX_DATABASE}"
  skip_database_creation = true
  timeout = "1s"
  username = "${INFLUX_OUTPUT_USER}"
  password = "${INFLUX_OUTPUT_USER_PASSWORD}"
  content_encoding = "gzip"

[[outputs.health]]
  service_address = "http://localhost:8080"
  read_timeout = "5s"
  write_timeout = "5s"
  namepass = ["internal_write"]
  tagpass = { output = ["influxdb"] }

[[outputs.health.compares]]
  field = "buffer_size"
  lt = 5000.0

[[outputs.health.contains]]
  field = "buffer_size"

[[inputs.mqtt_consumer]]
  servers = ["tcp://192.168.0.2:1883"]
  topics = ["/modbus/main/+/reading"]
  topic_tag = ""
  client_id = "${MQTT_CLIENT_ID}-main"
  data_format = "json"
  tag_keys = [
    "_addr",
    "_type",
    "name"
  ]
  json_name_key = "device"
  json_time_key = "_tz"
  json_time_format = "unix_ms"
  name_override = "power_meters"
  [inputs.mqtt_consumer.tags]
    bus = "main"

[[inputs.mqtt_consumer]]
  servers = ["tcp://192.168.0.2:1883"]
  topics = ["/modbus/secondary/+/reading"]
  topic_tag = ""
  client_id = "${MQTT_CLIENT_ID}-secondary"
  data_format = "json"
  tag_keys = [
    "_addr",
    "_type",
    "name"
  ]
  json_name_key = "device"
  json_time_key = "_tz"
  json_time_format = "unix_ms"
  name_override = "power_meters.secondary"
  [inputs.mqtt_consumer.tags]
    bus = "secondary"
