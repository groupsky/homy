version: '3'
services:

  ingress:
    build: docker/nginx-proxy
    restart: unless-stopped
    networks:
      - ingress
      - public
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro

  vpn:
    build: docker/wireguard
    restart: unless-stopped
    networks:
      - public
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Sofia
      - SERVERURL="${VPN_PUBLIC_URL}"
      - SERVERPORT="${VPN_PUBLIC_PORT}"
      - PEERS="${VPN_PEERS}"
      - PEERDNS=auto
      - INTERNAL_SUBNET="${VPN_SUBNET}"
    volumes:
      - ./data/wireguard:/config
      - /lib/modules:/lib/modules
    ports:
      - "${VPN_PUBLIC_PORT}:51820/udp"
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1

  broker:
    build: docker/mosquitto
    restart: unless-stopped
    networks:
      - automation

  whoami:
    image: jwilder/whoami
    networks:
      - ingress
    environment:
      - VIRTUAL_HOST=whoami.local

  nodered:
    build: docker/nodered
    volumes:
      - ./data/nodered:/data
    environment:
      - VIRTUAL_HOST=nodered.local
      - VIRTUAL_PORT=1880
    restart: unless-stopped
    networks:
      - automation
      - ingress
    devices:
      - /dev/bus/usb:/dev/bus/usb
    privileged: true

  ha:
    build: docker/homeassistant
    volumes:
      - ./data/home-assistant:/config
      - /etc/localtime:/etc/localtime:ro
    environment:
      - TZ=Europe/Sofia
      - VIRTUAL_HOST=ha.local
      - VIRTUAL_PORT=8123
    restart: unless-stopped
    networks:
      - automation
      - ingress

networks:
  automation:
    internal: true
  ingress:
    internal: true
  public:

