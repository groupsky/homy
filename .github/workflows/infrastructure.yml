name: infrastructure

on: [ push, pull_request ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate resolved compose config
        run: |
          # Debug: Check if example.env exists
          echo "Checking example.env file:"
          ls -la example.env

          # Load environment variables from example.env and export them
          # This ensures variable expansion works properly
          set -a
          source example.env
          set +a

          # Debug: Show some resolved variables
          echo "Resolved variables:"
          echo "CONFIG_PATH=$CONFIG_PATH"
          echo "VPN_CONFIG_PATH=$VPN_CONFIG_PATH"
          echo "DOMAIN=$DOMAIN"

          # Generate resolved compose config (now with variables in environment)
          docker compose --env-file example.env --file docker-compose.yml config > resolved-docker-compose.yml

          # Debug: verify the file was created and show its content
          ls -la resolved-docker-compose.yml
          echo "Working directory: $(pwd)"
          echo "File size: $(wc -l < resolved-docker-compose.yml) lines"
          echo "First few lines of resolved config:"
          head -30 resolved-docker-compose.yml

      - name: Build all containers
        uses: docker/bake-action@v6
        with:
          source: .
          files: |
            ./resolved-docker-compose.yml
          set: |
            *.cache-from=type=gha,scope=infrastructure
            *.cache-to=type=gha,mode=max,scope=infrastructure,ignore-error=true
          load: true

      - name: Start containers
        run: |
          docker compose --env-file example.env --file docker-compose.yml up --force-recreate --no-start
